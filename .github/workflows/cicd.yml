name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test-all:
    name: Test base activity
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run the tests on the base activity
        id: run-tests
        run: |
          docker build -f Dockerfile -t activity-base-test .
          docker run activity-base-test scripts/test.sh

  release:
    name: Create new release
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/main'
    needs: [ test-all ]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Dry bump version and push tag
      id: dry-bump-tag
      if: github.event_name == 'push' &&  github.ref == 'refs/heads/main'
      uses: anothrNick/github-tag-action@1.34.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: true
        DRY_RUN: true
    - name: Setup git config
      if: github.event_name == 'push' &&  github.ref == 'refs/heads/main'
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "info@ambiata.com"
    - name: Commit the new version of the python package
      if: github.event_name == 'push' &&  github.ref == 'refs/heads/main'
      env:
        NEW_TAG: ${{ steps.dry-bump-tag.outputs.new_tag }}
      run: |
        echo "# The version is auto-generated by the CI/CD pipeline" > atmosphere/VERSION
        echo "${NEW_TAG}" >> atmosphere/VERSION
        git add atmosphere/VERSION
        git commit -m "[tag] version ${NEW_TAG}"
        git push origin main
    - name: Checkout
      uses: actions/checkout@v2
    - name: Bump version and push tag
      id: push-tag
      uses: anothrNick/github-tag-action@1.34.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: true
